[{"/home/linuxuser/Documents/react/calculator/src/index.js":"1","/home/linuxuser/Documents/react/calculator/src/App.js":"2","/home/linuxuser/Documents/react/calculator/src/reportWebVitals.js":"3","/home/linuxuser/Documents/react/calculator/src/main/Calculator.jsx":"4","/home/linuxuser/Documents/react/calculator/src/components/Button.jsx":"5","/home/linuxuser/Documents/react/calculator/src/components/Display.jsx":"6"},{"size":375,"mtime":1608130385502,"results":"7","hashOfConfig":"8"},{"size":528,"mtime":1608127215794,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608127215794,"results":"10","hashOfConfig":"8"},{"size":3882,"mtime":1608243042140,"results":"11","hashOfConfig":"8"},{"size":372,"mtime":1608156756848,"results":"12","hashOfConfig":"8"},{"size":132,"mtime":1608242607330,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"p4rzgb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/home/linuxuser/Documents/react/calculator/src/index.js",[],["31","32"],"/home/linuxuser/Documents/react/calculator/src/App.js",[],"/home/linuxuser/Documents/react/calculator/src/reportWebVitals.js",[],"/home/linuxuser/Documents/react/calculator/src/main/Calculator.jsx",["33","34","35","36","37"],"import React, { Component } from 'react'\nimport './Calculator.css'\nimport Button from '../components/Button.jsx'\nimport Display from '../components/Display.jsx'\n\nconst initialState = {\n    displayValue: '0',\n    clearDisplay: false,\n    operation: null,\n    values: [0, 0],\n    current: 0\n}\n\nexport default class Calculator extends Component {\n    state = { ...initialState }\n\n    constructor(props) {\n        super(props)\n\n\n        this.addDigit = this.addDigit.bind(props)\n        this.setOperation = this.setOperation.bind(props)\n        this.cleanMemory = this.cleanMemory.bind(props)\n    }\n\n    addDigit = (digit) => {\n        if (digit === '.' && this.state.displayValue.toString().includes('.')) {\n            return\n        }\n\n        var clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay\n\n        var currentValue = clearDisplay && digit != '.' ? '' : this.state.displayValue\n\n        var displayValue = currentValue + digit\n\n        this.setState({ displayValue, clearDisplay: false })\n\n        if (digit != '.') {\n            var index = this.state.current\n            var values = [...this.state.values]\n            values[index] = parseFloat(displayValue)\n            this.setState({ values })\n        }\n\n\n    }\n\n    verifyDisplayValue(value){\n        if(value.toString().length > 11){\n            var newValue = value.toString().slice(0,10)\n            return parseFloat(newValue)\n        }else{\n            return value\n        }\n    }\n\n    setOperation = (operation) => {\n        if (this.state.current == 0) {\n            this.setState({ current: 1, operation, clearDisplay: true })\n        } else {\n            var values = [...this.state.values]\n            var originalValues = [...this.state.values]\n\n            try {\n                var result = eval(`${values[0]} ${this.state.operation} ${values[1]}`)\n                var equal = operation == '='\n\n                values[0] = result\n                values[1] = 0\n\n            } catch (e) {\n                values = originalValues\n            }\n\n            if (equal) {\n                this.setState({\n                    displayValue: values[0], operation: null,\n                    values, current: 0, clearDisplay: false\n                })\n            } else {\n                this.setState({\n                    displayValue: values[0], operation,\n                    values, current: 1, clearDisplay: true\n                })\n            }\n        }\n    }\n\n    cleanMemory = () => {\n        this.setState({ ...initialState })\n    }\n\n    render() {\n        return <div className=\"calculator\">\n            <Display value={this.verifyDisplayValue(this.state.displayValue)}></Display>\n            <Button label=\"AC\" onclick={this.cleanMemory} triple></Button>\n            <Button label=\"/\" onclick={this.setOperation} operation></Button>\n            <Button label=\"7\" onclick={this.addDigit}></Button>\n            <Button label=\"8\" onclick={this.addDigit}></Button>\n            <Button label=\"9\" onclick={this.addDigit}></Button>\n            <Button label=\"*\" onclick={this.setOperation} operation></Button>\n            <Button label=\"4\" onclick={this.addDigit}></Button>\n            <Button label=\"5\" onclick={this.addDigit}></Button>\n            <Button label=\"6\" onclick={this.addDigit}></Button>\n            <Button label=\"-\" onclick={this.setOperation} operation></Button>\n            <Button label=\"1\" onclick={this.addDigit}></Button>\n            <Button label=\"2\" onclick={this.addDigit}></Button>\n            <Button label=\"3\" onclick={this.addDigit}></Button>\n            <Button label=\"+\" onclick={this.setOperation} operation></Button>\n            <Button label=\"0\" onclick={this.addDigit} double></Button>\n            <Button label=\".\" onclick={this.addDigit}></Button>\n            <Button label=\"=\" onclick={this.setOperation} operation></Button>\n        </div>\n    }\n}","/home/linuxuser/Documents/react/calculator/src/components/Button.jsx",["38"],"import React from 'react'\n\nimport './Button.css'\n\nexport default props =>\n    <button className={`button ${props.operation ? 'operation' : ''}\n                                ${props.double ? 'double' : ''}\n                                ${props.triple ? 'triple' : ''}`}\n    onClick={e => props.onclick && props.onclick(props.label)}>\n        {props.label}\n    </button>",["39","40"],"/home/linuxuser/Documents/react/calculator/src/components/Display.jsx",["41"],"import React from 'react'\nimport './Display.css'\n\nexport default props =>\n        <div className=\"display\">{props.value}</div>\n    \n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":33,"column":50,"nodeType":"48","messageId":"49","endLine":33,"endColumn":52},{"ruleId":"46","severity":1,"message":"47","line":39,"column":19,"nodeType":"48","messageId":"49","endLine":39,"endColumn":21},{"ruleId":"46","severity":1,"message":"50","line":59,"column":32,"nodeType":"48","messageId":"49","endLine":59,"endColumn":34},{"ruleId":"51","severity":1,"message":"52","line":66,"column":30,"nodeType":"53","messageId":"49","endLine":66,"endColumn":34},{"ruleId":"46","severity":1,"message":"50","line":67,"column":39,"nodeType":"48","messageId":"49","endLine":67,"endColumn":41},{"ruleId":"54","severity":1,"message":"55","line":5,"column":1,"nodeType":"56","endLine":11,"endColumn":14},{"ruleId":"42","replacedBy":"57"},{"ruleId":"44","replacedBy":"58"},{"ruleId":"54","severity":1,"message":"55","line":4,"column":1,"nodeType":"56","endLine":5,"endColumn":53},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-eval","eval can be harmful.","CallExpression","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["59"],["60"],"no-global-assign","no-unsafe-negation"]